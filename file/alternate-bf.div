#!/bin/sh
#bof

# Diversion is free to use under the GNU General Public License version 3 (GPL-3.0)
# https://opensource.org/licenses/GPL-3.0

# Proudly coded by thelonelycoder
# Copyright (c) 2016-2066 thelonelycoder - All Rights Reserved
# https://www.snbforums.com/members/thelonelycoder.25480/
# https://diversion.ch

# Script Version 4.1.12

write_dnsmasq_conf(){
	{
	echo "### DO NOT EDIT THIS FILE ###"
	echo
	echo "pid-file=/var/run/alternate_bf_dnsmasq.pid"
	echo "user=nobody"
	echo "bind-dynamic"
	echo "interface=$(nvram get lan_ifname)"
	echo "no-dhcp-interface=pptp*"
	echo "listen-address=$aBFIP"
	echo "localise-queries"
	echo "no-resolv"
	echo "dhcp-option=lan,3,$(nvram get lan_ipaddr)"
	echo "dhcp-authoritative"
	echo "servers-file=/tmp/resolv.dnsmasq"
	echo
	if [ "$aBFConfInc" = "on" ]; then
		echo "# /jffs/configs/dnsmasq.conf.add directives #"
		for line in "$(grep "^[^#]" /jffs/configs/dnsmasq.conf.add)";do
			echo "$line"
		done
		echo
	fi
	echo "# start of Diversion directives #"
	if [ "$adblocking" = "on" ]; then
		for i in $(grep "^[^#]" "${DIVERSION_DIR}/list/wc_blacklist" | awk '{print $1}'); do
			echo "address=/$i/$blockingIP"
			[ "$(nvram get ipv6_service)" != "disabled" ] && echo "address=/$i/::"
		done

		if [ "$psState" = "on" ]; then
			if [ "$(nvram get ipv6_service)" = "disabled" ]; then
				echo "ptr-record=$(echo "${blockingIP}" | awk -F . '{print $4"."$3"."$2"."$1}').in-addr.arpa,$blockingIP"
			else
				echo "ptr-record=$(echo "${blockingIP}" | awk -F . '{print $4"."$3"."$2"."$1}').in-addr.arpa,$blockingIP"
				echo "address=/::/::"
				echo "ptr-record=0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa,::"
			fi
		elif [ -z "$psState" ] || [ "$psState" = "off" ]; then
			if [ "$LANblockingIP" = "on" ]; then
				echo "ptr-record=$(echo "${blockingIP}" | awk -F . '{print $4"."$3"."$2"."$1}').in-addr.arpa,$blockingIP"
			else
				echo "address=/0.0.0.0/0.0.0.0"
				echo "ptr-record=0.0.0.0.in-addr.arpa,0.0.0.0"
			fi
			if [ "$(nvram get ipv6_service)" != "disabled" ]; then
				echo "address=/::/::"
				echo "ptr-record=0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa,::"
			fi
		fi
		echo "addn-hosts=${DIVERSION_DIR}/list/blacklist"
		echo "addn-hosts=${DIVERSION_DIR}/list/blockinglist_fs"
	fi
	if [ "$dsSetting" = "on" ]; then
		[ "$cacheSize" ] && echo "cache-size=$cacheSize"
		[ "$bogusPriv" ] && echo "bogus-priv"
		[ "$domainNeeded" ] && echo "domain-needed"
	fi
	if [ "$logging" = "on" ]; then
		[ "$dsSetting" = "on" ] && [ "$logAsync" ] && echo "log-async=$logAsync" || echo "log-async"
		if [ "$dsSetting" = "on" ] && [ "$loqQueriesExtra" ]; then
			echo "log-queries=extra"
		else
			[ ! -f /tmp/diversion-loqQueriesExtra ] && echo "log-queries"
		fi
		if [ -f /tmp/diversion-loqQueriesExtra ]; then
			echo "log-queries=extra"
			mv /tmp/diversion-loqQueriesExtra /tmp/diversion-restartDnsmasq
		fi
		echo "log-facility=/opt/var/log/dnsmasq.log3"
	fi
	echo "# end of Diversion directives #";
	} >"${DIVERSION_DIR}/.conf/alternate-bf.conf"
}
write_dnsmasq_conf

ifconfig br0:alternate_bf $aBFIP up
dnsmasq -C "${DIVERSION_DIR}/.conf/alternate-bf.conf"
logger -t Diversion "started second Dnsmasq instance for alternate blocking list"
#eof
